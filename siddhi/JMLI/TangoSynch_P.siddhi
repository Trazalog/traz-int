@App:name('TangoSynch_P')
@App:description('Sincronizacion con Tango desde produccion JMLI')

@sink(type = 'http-call', 
      publisher.url = "https://cloudtrazalog.com:8243/tools/tango/1.0/synch/in", 
      method = "POST", 
      sink.id = "1", 
      headers = "'Content-Type:application/json','Authorization:Bearer eyJ4NXQiOiJaVEpoTnpObFpEWTFZalUzTkdZelpURXlaVGcxTkRoaVpXRmlZVGxoWlRCak9XVXhOamxqTlEiLCJraWQiOiJOVEpqT0RZM01UQTBNRGs1WmpjNVlqaGpPRGcxWlRZd01qTm1ZakU1T1RFMU56WTJOR1U1WlRZNU5UZGpOVFZsWWpBMFlqVTNZVGt6TkdFeFltSXdPQV9SUzI1NiIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJhZG1pbiIsImF1dCI6IkFQUExJQ0FUSU9OIiwiYXVkIjoidTdzSWV4b3hZSTA3bXRCWkV6RzFIZVVSYkxBYSIsIm5iZiI6MTY5MjM4NDU5OCwiYXpwIjoidTdzSWV4b3hZSTA3bXRCWkV6RzFIZVVSYkxBYSIsInNjb3BlIjoiZGVmYXVsdCIsImlzcyI6Imh0dHBzOlwvXC9sb2NhbGhvc3Q6OTQ0M1wvb2F1dGgyXC90b2tlbiIsImV4cCI6MzE1NTI5MjM4NDU5OCwiaWF0IjoxNjkyMzg0NTk4LCJqdGkiOiJiODA4MjE2Yy1kOWQ0LTQzZjctYWQ3YS1lNmZhOGNiYzQwODcifQ.jq9_wgjqJhNi2xYsLzKYtU7YScwfapxIDI_9agEuSPOFtwmVXQEDfKaKZMz1R6nQoaikC6FtIGkJazWwcQf6y83Q-bV4Kb7soXjvLDw8-5rU5qWPj0ACUnL04oJffgasKl37y4EyKdecoUb-o-NbtQ2FOtXW2i02NwRLehsEKfqC2wIOdJQEy1WSUTfkBwJ3eOwCmYfWntxvRyvbd5n3oxoIdgZPSN-W8VtWA40tK4RUenbz58qbmBhipVOw4Yez3PjReimg0eMdR8q_i_BFxIDh8ycfY7XBvCb3MVUkDrArlEPN66hLsLndOw4E7lvdECho6AcFnsXmIYS6yvjgFQ'",
      blocking.io='true',
      on.error='WAIT',
	@map(type = 'json'))
define stream HTTPSinkStream (queue_id int, data_json string,empr_id string,prov_id string);

@source(type = 'cdc', 
        url = "jdbc:sqlserver://;serverName=192.168.10.118;instance=SQLEXPRESS;databaseName=PRUEBA_TRAZALOG;encrypt=true;trustServerCertificate=true;", 
        username = "Axoft", 
        password = "Axoft", 
        table.name = "dbo.novedades_clientes_queue", 
        on.error='wait',
        database.server.name = "192.168.10.118\SQLEXPRESS", 
        mode = "polling", 
        polling.column = "fec_alta", 
        polling.interval = '1',
        jdbc.driver.name = "com.microsoft.sqlserver.jdbc.SQLServerDriver",
	@map(type = 'keyvalue'))
define stream NovedadTangoStream (queue_id int, data_json string);

-- Define sink to handle HTTP-call errors
@sink(type='log', 
      prefix='HTTP-call error occurred: ', 
      on.error='wait',
      @map(type='json', 
           enclosing.element='$',
           @attributes(error='$.ERROR')))
define stream ErrorSink (id int, name string, ERROR string);

@source(type = 'http-call-response', 
        sink.id = "1", 
        http.status.code = '2\d+',
        on.error='wait',
	@map(type = 'json'))
define stream HTTPResponseStream (queue_id int);

        
-- Update processed_flag column in SQL Server table for each processed record
@store(type='rdbms',
      jdbc.driver.name='com.microsoft.sqlserver.jdbc.SQLServerDriver',
      jdbc.url='jdbc:sqlserver://;serverName=192.168.10.118;instance=SQLEXPRESS;databaseName=PRUEBA_TRAZALOG;encrypt=true;trustServerCertificate=true;',
      database.server.name = "192.168.10.118\SQLEXPRESS",
      username='Axoft',
      password='Axoft')
define table novedades_clientes_queue (queue_id int,procesado int);


@sink(type = 'log') 
define stream LogStream (queue_id int, data_json string, empr_id string, prov_id string);


@info(name = 'log')
from NovedadTangoStream 
select queue_id, data_json,"9000" as empr_id, "33" as prov_id
insert into LogStream;

@info(name = 'novedades')
from NovedadTangoStream 
select queue_id, data_json,"9000" as empr_id, "33" as prov_id 
insert into HTTPSinkStream;

@info(name = 'post-grabacion')
from HTTPResponseStream 
select queue_id
update novedades_clientes_queue 
set novedades_clientes_queue.procesado = 1
on novedades_clientes_queue.queue_id == queue_id

